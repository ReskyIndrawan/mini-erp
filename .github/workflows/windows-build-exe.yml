name: Build Windows EXE

on:
  push:
    branches: [main, master]
    tags:
      - "v*"
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install openpyxl
          if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Ensure tabs/__init__.py exists
        shell: powershell
        run: |
          if (!(Test-Path "tabs")) { New-Item -Path "tabs" -ItemType Directory -Force | Out-Null }
          if (!(Test-Path "tabs/__init__.py")) { New-Item -Path "tabs/__init__.py" -ItemType File -Force | Out-Null }

      - name: Build EXE (windowed) with PyInstaller
        shell: powershell
        run: |
          pyinstaller --onefile --windowed --paths . `
            --hidden-import tabs.tab1_template `
            --hidden-import tabs.tab2_entry `
            --hidden-import excel_utils `
            --name "不良品データ管理システム" `
            --icon=icon.ico `
            main.py
        continue-on-error: true

      - name: Build EXE without icon (fallback)
        if: failure()
        shell: powershell
        run: |
          pyinstaller --onefile --windowed --paths . `
            --hidden-import tabs.tab1_template `
            --hidden-import tabs.tab2_entry `
            --hidden-import excel_utils `
            --name "不良品データ管理システム" `
            main.py

      - name: List dist contents
        shell: powershell
        run: |
          if (Test-Path dist) { Get-ChildItem dist -Recurse } else { Write-Error "dist folder not found"; exit 1 }

      - name: Quick run test (10s)
        shell: powershell
        run: |
          $exe = Get-ChildItem -Path "dist" -Filter "*.exe" -Recurse | Select-Object -First 1
          if (-not $exe) {
            Write-Error "No EXE file found in dist/"
            exit 1
          }
          Write-Host "Testing EXE: $($exe.FullName)"
          $p = Start-Process -FilePath $exe.FullName -PassThru -WindowStyle Hidden
          Start-Sleep -Seconds 10
          if (Get-Process -Id $p.Id -ErrorAction SilentlyContinue) {
            Write-Host "EXE is running. Terminating test process..."
            Stop-Process -Id $p.Id -Force
          } else {
            Write-Error "EXE exited or crashed during startup test"
            exit 1
          }

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: dist/*.exe

      - name: Create Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
